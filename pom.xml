<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.sansa-stack</groupId>
	<artifactId>qualityassessmentbenchmark-parent</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Quality Assessment Benchmark - Parent</name>

	<organization>
		<name>Smart Data Analytics (SDA) research group</name>
		<url>http://sda.tech</url>
	</organization>

	<modules>
		<module>sansa-qualityassessment-spark</module>
		<module>luzzu-qualityassessment-java</module>
	</modules>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<scala.version>2.11.11</scala.version>
		<scala.binary.version>2.11</scala.binary.version>
		<spark.version>2.3.1</spark.version>
		<flink.version>1.5.0</flink.version>
		<hadoop.version>2.8.3</hadoop.version>
		<jena.version>3.7.0</jena.version>
		<sansa.version>0.4.1-SNAPSHOT</sansa.version>
		<scalastyle.config.path>${project.basedir}/scalastyle-config.xml</scalastyle.config.path>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Scala -->
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<!-- Apache Spark Core -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_${scala.binary.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>

			<!-- Apache JENA 3.x -->
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-core</artifactId>
				<version>${jena.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-arq</artifactId>
				<version>${jena.version}</version>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>com.typesafe.scala-logging</groupId>
				<artifactId>scala-logging_${scala.binary.version}</artifactId>
				<version>3.5.0</version>
			</dependency>
			<!-- Scopt -->
			<dependency>
				<groupId>com.github.scopt</groupId>
				<artifactId>scopt_${scala.binary.version}</artifactId>
				<version>3.5.0</version>
			</dependency>

			<!-- RDF Layer -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sansa-rdf-spark_${scala.binary.version}</artifactId>
				<version>${sansa.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>2.26-b03</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Commons-codec dependency: solve the issue of making clean install -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.11</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Scala Maven -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.2.1</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<args>
									<!--<arg>-make:transitive</arg> -->
									<arg>-dependencyfile</arg>
									<arg>${project.build.directory}/.scala_dependencies</arg>
								</args>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<scalaVersion>${scala.version}</scalaVersion>
						<recompileMode>incremental</recompileMode>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<!-- Surefire -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>

				<!-- Scalastyle -->
				<plugin>
					<groupId>org.scalastyle</groupId>
					<artifactId>scalastyle-maven-plugin</artifactId>
					<version>1.0.0</version>
					<configuration>
						<verbose>false</verbose>
						<failOnViolation>false</failOnViolation>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<failOnWarning>false</failOnWarning>
						<sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
						<testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
						<!-- we use a central config located in the root directory -->
						<configLocation>${scalastyle.config.path}</configLocation>
						<outputFile>${project.basedir}/scalastyle-output.xml</outputFile>
						<outputEncoding>UTF-8</outputEncoding>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Scalatest -->
				<plugin>
					<groupId>org.scalatest</groupId>
					<artifactId>scalatest-maven-plugin</artifactId>
					<version>1.0</version>
				</plugin>

				<!-- Git Flow -->
				<plugin>
					<groupId>com.amashchenko.maven.plugin</groupId>
					<artifactId>gitflow-maven-plugin</artifactId>
					<version>1.8.0</version>
					<configuration>
						<gitFlowConfig>
							<versionTagPrefix>v</versionTagPrefix>
						</gitFlowConfig>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>root-dir</id>
			<activation>
				<file>
					<exists>${project.basedir}/../../scalastyle-config.xml</exists>
				</file>
			</activation>
			<properties>
				<scalastyle.config.path>${project.basedir}/../scalastyle-config.xml</scalastyle.config.path>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>oss-sonatype</id>
			<name>oss-sonatype</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>apache-snapshot</id>
			<name>Apache repository (snapshots)</name>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven.aksw.internal</id>
			<name>AKSW Release Repository</name>
			<url>http://maven.aksw.org/archiva/repository/internal</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven.aksw.snapshots</id>
			<name>AKSW Snapshot Repository</name>
			<url>http://maven.aksw.org/archiva/repository/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
